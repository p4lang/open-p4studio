[%- ######################################################################## -%]

[%- BLOCK define_const -%]

  printf("#define %-54s \t0x%08X\n", "[% name %]", [% name %]);
[%- END -%]

[%- ######################################################################## -%]

[%- # The body of the file: -%]

#include <stdio.h>
#include "sai.h"

// clang-format off

int main() {
  printf("/*******************************************************************************\n");
  printf(" * Copyright (c) 2021-present Intel Corporation.\n");
  printf(" * SPDX-License-Identifier: Apache-2.0\n");
  printf(" *\n");
  printf(" * Licensed under the Apache License, Version 2.0 (the \"License\");\n");
  printf(" * you may not use this file except in compliance with the License.\n");
  printf(" * You may obtain a copy of the License at\n");
  printf(" *\n");
  printf(" * http://www.apache.org/licenses/LICENSE-2.0\n");
  printf(" *\n");
  printf(" * Unless required by applicable law or agreed to in writing, software\n");
  printf(" * distributed under the License is distributed on an \"AS IS\" BASIS,\n");
  printf(" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");
  printf(" * See the License for the specific language governing permissions and\n");
  printf(" * limitations under the License.\n");
  printf(" *\n");
  printf(" * $Id: $\n");
  printf(" *");
  printf(" ******************************************************************************/");

  printf("\n\n");

  printf("#ifndef __SAI_GEN_ATTRIBUTES_H__\n");
  printf("#define __SAI_GEN_ATTRIBUTES_H__\n");

  printf("\n// clang-format off\n");

  // object types
  printf("\n// object types\n");
[%- FOREACH object_type IN  apis.common.object_types.elements -%]

[%- PROCESS define_const name=object_type.name %]
[%- END -%]

[%- FOREACH api IN apis.keys.sort -%]
    [%- IF apis.$api.functions.size %]

  // [% api %] API
  printf("\n// [% api %] API\n");
        [%- FOREACH object IN apis.$api.objects.keys.sort -%]

            [%- IF apis.$api.objects.$object.attrs.all.size %]

  // [% object %] attributes
  printf("\n// [% object %] attributes\n");
                [%- FOREACH attr IN  apis.$api.objects.$object.attrs.all -%]

[%- PROCESS define_const name=attr.name %]
                [%- END -%]
            [%- ELSE -%]

  // (no [% object %] attributes)
  printf ("(no [% object %] attributes)\n");
            [%- END -%]
        [%- END -%]
    [%- END -%]
[% END %]

  printf("\n#endif /* __SAI_GEN_ATTRIBUTES_H__ */\n");
}
